buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

apply plugin: 'maven-publish'
apply plugin: com.jfrog.bintray.gradle.BintrayPlugin

publishing {
    publications {
        mavenJava (MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact docsJar
            artifact testsJar
            artifact shadowJar
        }
    }
}

artifactory {
    contextUrl = artifactoryURL
    publish {
        repository {
            repoKey = version.endsWith('-SNAPSHOT') ? snapshotRepository : releaseRepository
            username = artifactoryUser
            password = artifactoryPassword
            mavenCompatible = true
        }
        defaults {
            publications ('mavenJava')
        }
    }
}

bintray {

    user = project.bintrayUsername
    key = project.bintrayKey
    publications = ['mavenJava']
    publish = true

    pkg {
        repo = 'java-libraries'
        name = 'artifactory-rest'
        desc = 'Java client for working with Artifactory REST API.'
        websiteUrl = "https://github.com/cdancy/${project.name}"
        issueTrackerUrl = "https://github.com/cdancy/${project.name}/issues"
        vcsUrl = "https://github.com/cdancy/${project.name}.git"
        licenses = ['Apache-2.0']
        labels = ['java', 'artifactory', 'client', 'rest']
        publicDownloadNumbers = true
        githubRepo = "cdancy/${project.name}"
        githubReleaseNotesFile = 'RELEASE_NOTES.md'

        version {
            released  = new Date()
            vcsTag = "v${project.version}"
            attributes = ['artifactory-rest': ["${project.group}:${project.name}:${project.version}"]]

            gpg {
                sign = true
                passphrase = resolveProperty('GPG_PASSPHRASE', 'gpgPassphrase')
            }
        }
    }
}

String resolveProperty(String envVarKey, String projectPropKey) {
    String propValue = System.getenv()[envVarKey]
    if(propValue) { return propValue }
    hasProperty(projectPropKey) ? getProperty(projectPropKey) : null
}
